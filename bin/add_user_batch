#!/bin/bash

set -e

EXEC_NAME=$0
USERS_FILE="users.txt"

usage() {
cat << END 1>&2
Usage:
    $EXEC_NAME -h
    $EXEC_NAME [OPTIONS]

Description:
    Generates <number> users. Optionaly adds records into $USERS_FILE file and
    prints them.

Environment:
    Following environment variables must be set:
        DOMJUDGE_DOMAIN
        DOMJUDGE_ADMIN_NAME (optional, default: admin)
        DOMJUDGE_ADMIN_PASS

Options:
    -h                  Prints this message.
    -n <number>         Sets number of users to generate.
    -u <user_prefix>    Sets user name prefix.
    -t <team_prefix>    Sets team name prefix.
    -p <pass_length>    Sets generated password length.
    -g <group_ids>      Sets team group_ids. Comma separated list. Required.
    -q                  Turns on quiet mode.
    -w                  Don't write $USERS_FILE.
END
}

user_prefix="user"
team_prefix="team"
num=10
add_user_flags=""

while getopts ":n:u:t:p:hg:qw" arg; do
    case "${arg}" in
        "n")
            num="$OPTARG"
            ;;

        "u")
            user_prefix="$OPTARG"
            ;;

        "t")
            team_prefix="$OPTARG"
            ;;

        "g")
            if [ ! -z "$OPTARG" ]; then
                add_user_flags="$add_user_flags -g $OPTARG"
            fi
            ;;

        "p")
            add_user_flags="$add_user_flags -p $OPTARG"
            ;;

        "q")
            add_user_flags="$add_user_flags -q"
            ;;

        "w")
            add_user_flags="$add_user_flags -w"
            ;;

        "h")
            usage
            exit 0
            ;;

        *)
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

numlen=$(echo -n "$num" | wc -c)

for i in $(seq 1 $num); do
    team_name=$(printf "%s%0*d" "$team_prefix" "$numlen" "$i")
    user_name=$(printf "%s%0*d" "$user_prefix" "$numlen" "$i")

    "$(dirname "$0")/add_user" $add_user_flags -t "$team_name" -u "$user_name"
done
