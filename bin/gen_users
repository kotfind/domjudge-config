#!/bin/bash

set -e

EXEC_NAME=$0
# TEAMS_FILE="teams.yml"
ACCOUNTS_FILE="accounts.yml"
USERS_FILE="users.txt"

usage() {
cat << END 1>&2
Usage:
    $EXEC_NAME -h
    $EXEC_NAME [OPTIONS]

Description:
    Generates two files: $ACCOUNTS_FILE and $USERS_FILE (optional).
    The first one is to be imported, the second one is just for convenience.

Options:
    -h                  Prints this message.
    -n <number>         Sets number of users to generate.
    -u <user_prefix>    Sets user name prefix.
    -t <team_prefix>    Sets team name prefix.
    -p <pass_length>    Sets generated password length.
    -q                  Turns on quiet mode.
    -w                  Don't write $USERS_FILE.
END
}

user_prefix="user"
team_prefix="team"
passlen=10
num=10
quiet=false
write=true

while getopts ":n:u:t:p:hqw" arg; do
    case "${arg}" in
        "n")
            num="$OPTARG"
            ;;

        "u")
            user_prefix="$OPTARG"
            ;;

        "t")
            team_prefix="$OPTARG"
            ;;

        "p")
            passlen="$OPTARG"
            ;;

        "q")
            quiet=true
            ;;

        "w")
            write=false
            ;;

        "h")
            usage
            exit 0
            ;;

        *)
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND-1))

out() {
    val=$(cat)
    if [ "$write" = true ]; then
        echo "$val" >> "$USERS_FILE"
    fi
    if [ "$quiet" = false ]; then
        echo "$val"
    fi
}

numlen=$(echo -n "$num" | wc -c)
userlen=$(echo -n "$user_prefix$num" | wc -c)
teamlen=$(echo -n "$team_prefix$num" | wc -c)

# > "$TEAMS_FILE"
> "$ACCOUNTS_FILE"

if [ "$write" = true ]; then
    > "$USERS_FILE"
fi

printf "%-*s %-*s %-*s\n" \
    "$userlen" "USER" \
    "$teamlen" "TEAM" \
    "$passlen" "PASS" \
    | out

for i in $(seq 1 $num); do
    team=$(printf "%s%0*d" "$team_prefix" "$numlen" "$i")
    user=$(printf "%s%0*d" "$user_prefix" "$numlen" "$i")
    pass="$(tr -dc 'A-Za-z0-9!?%=' < /dev/urandom | head -c "$passlen")"

#     cat << END >> "$TEAMS_FILE"
# - id: "$team"
#   name: "$team"
#   group_ids:
#     - 3
# 
# END

    cat << END >> "$ACCOUNTS_FILE"
- id: "$user"
  name: "$user"
  username: "$user"
  password: "$pass"
  type: "team"
  team_id: "$team"

END

    echo "$user $team $pass" | out
done
